# Makefile for regridding code

# Output directory and name
OUT_DIR = ./
TEST_GEO_WIND_NAME = ../exe/test_geo_wind

# Compiler variables
CPP = g++ -stdlib=libstdc++
INCLUDE_DIRS = -Itclap/include/ -I./
LIBRARY_DIRS = -L./
OBJ_DIR = obj

DEBUG_FLAGS = -Wno-deprecated -O0 -g -Wall
RELEASE_FLAGS = -Wno-deprecated -O3 -msse3
PROFILE_FLAGS = $(RELEASE_FLAGS) -pg
COMMON_FLAGS = -DFP_TYPE=float
FLAGS = $(RELEASE_FLAGS) $(COMMON_FLAGS)
#FLAGS = $(PROFILE_FLAGS) $(COMMON_FLAGS)
#FLAGS = $(DEBUG_FLAGS) $(COMMON_FLAGS)

# Linker variables
LDFLAGS = $(FLAGS) -stdlib=libstdc++
LD = g++ $(LDFLAGS)
COMMON_LIBS = -lstdc++ -lnetcdf -lnetcdf_c++

ALL_DEPEND = quadtree.h

OBJ_DIR=../obj

COMMON_CPP = vector_3D.cpp geo_convert.cpp set_cout_precision.cpp \
             force_tri_3D.cpp point_cloud.cpp force_point.cpp \
             bin_file_utils.cpp haversine.cpp tri_grid.cpp  \
			 indexed_force_tri_3D.cpp extremum.cpp meta_data.cpp \
			 read_from_string.cpp
COMMON_OBJ = $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(COMMON_CPP)) 

NETCDF_CPP = ncdata.cpp rotated_grid.cpp Rot2Global.cpp
NETCDF_OBJ = $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(NETCDF_CPP)) 

TEST_GEO_WIND_CPP = test_geo_wind.cpp geo_wind_vector.cpp spline.cpp rotated_grid.cpp
TEST_GEO_WIND_OBJ = $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(TEST_GEO_WIND_CPP))

all: $(TEST_GEO_WIND_NAME) 

obj:
	@mkdir -p $@
	
$(GEN_GRID_OBJ): | obj

$(OBJ_DIR)/%.o : %.cpp $(ALL_DEPEND)
	$(CPP) $(FLAGS) $(INCLUDE_DIRS) -c $< -o $@

$(TEST_GEO_WIND_NAME): $(TEST_GEO_WIND_OBJ) $(COMMON_OBJ) $(NETCDF_OBJ)
	$(LD) $^ $(COMMON_LIBS) -o $(OUT_DIR)$@ $(LDFLAGS)
